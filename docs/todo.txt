App:
====

- On install:
  - ask user to register for account or login
  - ensure user on wifi, and send discovery packets
  - get back server IP address, and request config from server

- On startup:
  - connect to server and retrieve config ASAP
  - save config and current SSID to be used as fallback when on wifi

- On button push:
  - disable all buttons
  - send command to the server, plus:
    - server time + elapsed time back to server
    - currently connected cell id (if applicable, else -1)
  - wait for response from server or timeout after 15 seconds
  - re-enable buttons

- Disconnect after 1 minute of app pause


Server:
=======
- Single threaded without a queue: discard messages while processing a message
  - must respond to new messages immediately after processing last message (to be able to stop/start gate, for example)

- Command from app: get_config
  - send back server config: current time, server xmpp account, server internal ip, nearby cell id's

- Listen for UDP packet for discovery
  - server send back UDP packet with it's IP address

- HTTP server:
  - GET /open/1 - open door/gate
  - GET /config - return config, as for the XMPP version

 